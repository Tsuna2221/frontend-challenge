{"remainingRequest":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"safari >= 7\"]}}],[\"@babel/preset-react\"],[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx","dependencies":[{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx","mtime":1556588236110},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1542822444129},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js","mtime":1541686617987}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 1px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  display: initial;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50px;\\n  left: 0;\\n  max-width: 380px;\\n  height: 460px;\\n  display: none;\\n  z-index: 10;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n        \", \";\\n        \", \"\\n      \"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  background-image: url(\", \");\\n  background-position: 50% 50%;\\n  background-repeat: no-repeat;\\n  width: 35px;\\n  height: 40px;\\n  top: 0;\\n  right: 0;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n        \", \";\\n        \", \"\\n      \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 40px;\\n  background-color: \", \";\\n  color: \", \";\\n  padding: 0 35px 0 10px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  width: 100%;\\n  text-align: left;\\n  border: none;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  opacity: 0.4;\\n  cursor: initial;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  border: 1px solid \", \";\\n  box-shadow: 0 5px 10px -5px rgba(0, 0, 0, 0.1);\\n  border-radius: 8px;\\n  overflow: hidden;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 0 4px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css, cx } from 'react-emotion';\nimport Text from '../Text/Text';\nimport { Menu, MenuItem } from '../Menu';\nimport theme from '../themes';\nimport arrow from \"./arrow.svg\";\nvar nameStyles = css(_templateObject());\nvar dropdownContentStyles = css(_templateObject2());\nvar buttonWrapperStyles = css(_templateObject3(), theme.colors.lightestGrey);\nvar disabledStyles = css(_templateObject4());\nvar buttonStyles = css(_templateObject5(), theme.colors.white, theme.colors.darkestGrey);\n\nvar fetchButtonStyles = function fetchButtonStyles(disabled) {\n  return disabled ? css(_templateObject6(), buttonStyles, disabledStyles) : buttonStyles;\n};\n\nvar arrowStyles = css(_templateObject7(), arrow);\n\nvar fetchArrowStyles = function fetchArrowStyles(disabled) {\n  return disabled ? css(_templateObject8(), arrowStyles, disabledStyles) : arrowStyles;\n};\n\nvar menuWrapperStyles = css(_templateObject9());\nvar visibleStyles = css(_templateObject10());\nvar dividerStyles = css(_templateObject11(), theme.colors.whiteSmoke);\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dropdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      expanded: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClickOutside\", function (event) {\n      if (_this.wrapper && !_this.wrapper.contains(event.target)) {\n        _this.setState({\n          expanded: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (item) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          selected = _this$props.selected,\n          multiselect = _this$props.multiselect;\n\n      if (!multiselect) {\n        _this.setState({\n          expanded: false\n        });\n\n        onChange && onChange(item.id);\n        return;\n      }\n\n      if (!onChange) {\n        return;\n      }\n\n      var isSelected = !!selected.find(function (value) {\n        return value === item.id;\n      });\n      var newSelected = isSelected ? selected.filter(function (value) {\n        return value !== item.id;\n      }) : _toConsumableArray(selected).concat([item.id]);\n      onChange(newSelected);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleSelectAll\", function () {\n      var _this$props2 = _this.props,\n          items = _this$props2.items,\n          onChange = _this$props2.onChange;\n      var newSelected = _this.allSelected() ? [] : items.map(function (item) {\n        return item.id;\n      });\n      onChange && onChange(newSelected);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleButtonClick\", function () {\n      if (_this.props.disabled) return;\n\n      _this.setState({\n        expanded: !_this.state.expanded\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleOnBlur\", function () {\n      if (!_this.props.multiselect) {\n        _this.setState({\n          expanded: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setWrapper\", function (node) {\n      _this.wrapper = node;\n    });\n\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('touchstart', this.handleClickOutside);\n      document.addEventListener('mousedown', this.handleClickOutside);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('touchstart', this.handleClickOutside);\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n  }, {\n    key: \"allSelected\",\n    value: function allSelected() {\n      var _this$props3 = this.props,\n          items = _this$props3.items,\n          selected = _this$props3.selected,\n          multiselect = _this$props3.multiselect;\n\n      if (!multiselect || !selected) {\n        return false;\n      }\n\n      return items.every(function (item) {\n        return selected.includes(item.id);\n      });\n    }\n  }, {\n    key: \"buttonText\",\n    value: function buttonText() {\n      var _this$props4 = this.props,\n          placeholder = _this$props4.placeholder,\n          multiselect = _this$props4.multiselect,\n          selected = _this$props4.selected,\n          items = _this$props4.items,\n          _this$props4$buttonLa = _this$props4.buttonLabel,\n          singular = _this$props4$buttonLa.singular,\n          plural = _this$props4$buttonLa.plural;\n      var selectedItemsCount = (selected || []).length;\n\n      if (multiselect) {\n        var label = selectedItemsCount === 1 ? singular : plural;\n        return selectedItemsCount === 0 ? placeholder : \"\".concat(selectedItemsCount, \" \").concat(label);\n      } else {\n        return selected ? items.find(function (item) {\n          return item.id === selected;\n        }).value : placeholder;\n      }\n    }\n  }, {\n    key: \"renderSelectAll\",\n    value: function renderSelectAll() {\n      if (!this.props.multiselect) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        withCheck: true,\n        selected: this.allSelected(),\n        onClick: this.handleSelectAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Marcar / Desmarcar todas\"), React.createElement(\"div\", {\n        className: dividerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this2 = this;\n\n      var multiselect = this.props.multiselect;\n      var selected = multiselect ? this.props.selected.includes(item.id) : this.props.selected === item.id;\n      return React.createElement(MenuItem, {\n        key: item.id,\n        withCheck: multiselect,\n        selected: selected,\n        onClick: function onClick() {\n          return _this2.handleClick(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, item.value);\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this3 = this;\n\n      return this.props.items.map(function (item) {\n        return _this3.renderItem(item);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          name = _this$props5.name,\n          disabled = _this$props5.disabled;\n      return React.createElement(\"div\", {\n        ref: this.setWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, name && React.createElement(Text, {\n        secondary: true,\n        className: nameStyles,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: dropdownContentStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: buttonWrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: fetchButtonStyles(disabled),\n        type: \"button\",\n        onBlur: this.handleOnBlur,\n        onClick: this.handleButtonClick,\n        value: this.buttonText(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: fetchArrowStyles(disabled),\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: cx(menuWrapperStyles, _defineProperty({}, visibleStyles, this.state.expanded)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.renderSelectAll(), this.renderItems()))));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nDropdown.propTypes = {\n  /** Singular and plural versions of the label to be shown on a multiselect\n   *  dropdown when at least one item is selected\n   */\n  buttonLabel: PropTypes.shape({\n    singular: PropTypes.string.isRequired,\n    plural: PropTypes.string.isRequired\n  }),\n\n  /** An array of data describing the dropdown content. Each item must have\n   * a value and an id\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n  })).isRequired,\n\n  /** Indicates that the dropdown allows multiselection */\n  multiselect: PropTypes.bool,\n\n  /** The dropdown name, rendered on top of it */\n  name: PropTypes.string,\n\n  /** A callback to be called when the user clicks on an item.\n   * In a single select dropdown, it receives the id of the clicked item.\n   * If the dropdown allows multiselect, it receives an array with all the\n   * selected items ids.\n   */\n  onChange: PropTypes.func,\n\n  /** The text shown on the dropdown button when no item is selected */\n  placeholder: PropTypes.string,\n\n  /** The id of the currently selected item, or, in the case of a multiselect\n   * dropdown, an array containing the ids of the selected items.\n   */\n  selected: PropTypes.oneOfType([PropTypes.oneOfType([PropTypes.number, PropTypes.string]), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))]),\n\n  /** A boolean and renders the dropdown unopenable */\n  disabled: PropTypes.bool\n};\nDropdown.defaultProps = {\n  buttonLabel: {\n    singular: 'item',\n    plural: 'items'\n  },\n  placeholder: 'Selecione'\n};\nvar _default = Dropdown;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(nameStyles, \"nameStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(dropdownContentStyles, \"dropdownContentStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(buttonWrapperStyles, \"buttonWrapperStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(disabledStyles, \"disabledStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(buttonStyles, \"buttonStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(fetchButtonStyles, \"fetchButtonStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(arrowStyles, \"arrowStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(fetchArrowStyles, \"fetchArrowStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(menuWrapperStyles, \"menuWrapperStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(visibleStyles, \"visibleStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(dividerStyles, \"dividerStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(Dropdown, \"Dropdown\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx\");\n  leaveModule(module);\n})();\n\n;\nDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleClickOutside\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"item\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleSelectAll\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleButtonClick\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleOnBlur\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"setWrapper\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"node\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"allSelected\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"buttonText\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"renderSelectAll\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"renderItem\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"item\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"renderItems\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"Dropdown\",\n  \"props\": {\n    \"buttonLabel\": {\n      \"defaultValue\": {\n        \"value\": \"{\\n  singular: 'item',\\n  plural: 'items',\\n}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"singular\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"plural\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Singular and plural versions of the label to be shown on a multiselect\\n dropdown when at least one item is selected\"\n    },\n    \"placeholder\": {\n      \"defaultValue\": {\n        \"value\": \"'Selecione'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"The text shown on the dropdown button when no item is selected\"\n    },\n    \"items\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"value\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"number\"\n              }, {\n                \"name\": \"string\"\n              }],\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"An array of data describing the dropdown content. Each item must have\\na value and an id\"\n    },\n    \"multiselect\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Indicates that the dropdown allows multiselection\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"The dropdown name, rendered on top of it\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"A callback to be called when the user clicks on an item.\\nIn a single select dropdown, it receives the id of the clicked item.\\nIf the dropdown allows multiselect, it receives an array with all the\\nselected items ids.\"\n    },\n    \"selected\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"union\",\n          \"value\": [{\n            \"name\": \"number\"\n          }, {\n            \"name\": \"string\"\n          }]\n        }, {\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"number\"\n            }, {\n              \"name\": \"string\"\n            }]\n          }\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The id of the currently selected item, or, in the case of a multiselect\\ndropdown, an array containing the ids of the selected items.\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"A boolean and renders the dropdown unopenable\"\n    }\n  }\n};",{"version":3,"sources":["/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Dropdown/Dropdown.jsx"],"names":["React","PropTypes","css","cx","Text","Menu","MenuItem","theme","nameStyles","dropdownContentStyles","buttonWrapperStyles","colors","lightestGrey","disabledStyles","buttonStyles","white","darkestGrey","fetchButtonStyles","disabled","arrowStyles","arrow","fetchArrowStyles","menuWrapperStyles","visibleStyles","dividerStyles","whiteSmoke","Dropdown","expanded","event","wrapper","contains","target","setState","item","props","onChange","selected","multiselect","id","isSelected","find","value","newSelected","filter","items","allSelected","map","state","node","document","addEventListener","handleClickOutside","removeEventListener","every","includes","placeholder","buttonLabel","singular","plural","selectedItemsCount","length","label","handleSelectAll","handleClick","renderItem","name","setWrapper","handleOnBlur","handleButtonClick","buttonText","renderSelectAll","renderItems","Component","propTypes","shape","string","isRequired","arrayOf","oneOfType","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css, cx } from 'react-emotion'\n\nimport Text from '../Text/Text'\nimport { Menu, MenuItem } from '../Menu'\nimport theme from '../themes'\nimport arrow from './arrow.svg'\n\nconst nameStyles = css`\n  margin: 0 0 4px;\n`\n\nconst dropdownContentStyles = css`\n  position: relative;\n`\n\nconst buttonWrapperStyles = css`\n  position: relative;\n  border: 1px solid ${theme.colors.lightestGrey};\n  box-shadow: 0 5px 10px -5px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  overflow: hidden;\n  cursor: pointer;\n`\n\nconst disabledStyles = css`\n  opacity: 0.4;\n  cursor: initial;\n`\n\nconst buttonStyles = css`\n  height: 40px;\n  background-color: ${theme.colors.white};\n  color: ${theme.colors.darkestGrey};\n  padding: 0 35px 0 10px;\n  font-size: 14px;\n  cursor: pointer;\n  width: 100%;\n  text-align: left;\n  border: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst fetchButtonStyles = disabled =>\n  disabled\n    ? css`\n        ${buttonStyles};\n        ${disabledStyles}\n      `\n    : buttonStyles\n\nconst arrowStyles = css`\n  position: absolute;\n  background-image: url(${arrow});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  width: 35px;\n  height: 40px;\n  top: 0;\n  right: 0;\n`\n\nconst fetchArrowStyles = disabled =>\n  disabled\n    ? css`\n        ${arrowStyles};\n        ${disabledStyles}\n      `\n    : arrowStyles\n\nconst menuWrapperStyles = css`\n  position: absolute;\n  top: 50px;\n  left: 0;\n  max-width: 380px;\n  height: 460px;\n  display: none;\n  z-index: 10;\n`\n\nconst visibleStyles = css`\n  display: initial;\n`\n\nconst dividerStyles = css`\n  height: 1px;\n  background-color: ${theme.colors.whiteSmoke};\n`\n\nclass Dropdown extends React.Component {\n  state = { expanded: false }\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleClickOutside)\n    document.addEventListener('mousedown', this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.handleClickOutside)\n    document.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  handleClickOutside = event => {\n    if (this.wrapper && !this.wrapper.contains(event.target)) {\n      this.setState({ expanded: false })\n    }\n  }\n\n  handleClick = item => {\n    const { onChange, selected, multiselect } = this.props\n\n    if (!multiselect) {\n      this.setState({ expanded: false })\n      onChange && onChange(item.id)\n      return\n    }\n\n    if (!onChange) {\n      return\n    }\n\n    const isSelected = !!selected.find(value => value === item.id)\n    const newSelected = isSelected\n      ? selected.filter(value => value !== item.id)\n      : [...selected, item.id]\n\n    onChange(newSelected)\n  }\n\n  handleSelectAll = () => {\n    const { items, onChange } = this.props\n    const newSelected = this.allSelected() ? [] : items.map(item => item.id)\n\n    onChange && onChange(newSelected)\n  }\n\n  handleButtonClick = () => {\n    if (this.props.disabled) return\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  handleOnBlur = () => {\n    if (!this.props.multiselect) {\n      this.setState({ expanded: false })\n    }\n  }\n\n  setWrapper = node => {\n    this.wrapper = node\n  }\n\n  allSelected() {\n    const { items, selected, multiselect } = this.props\n\n    if (!multiselect || !selected) {\n      return false\n    }\n\n    return items.every(item => selected.includes(item.id))\n  }\n\n  buttonText() {\n    const {\n      placeholder,\n      multiselect,\n      selected,\n      items,\n      buttonLabel: { singular, plural },\n    } = this.props\n    const selectedItemsCount = (selected || []).length\n\n    if (multiselect) {\n      const label = selectedItemsCount === 1 ? singular : plural\n      return selectedItemsCount === 0 ? placeholder : `${selectedItemsCount} ${label}`\n    } else {\n      return selected ? items.find(item => item.id === selected).value : placeholder\n    }\n  }\n\n  renderSelectAll() {\n    if (!this.props.multiselect) {\n      return null\n    }\n\n    return (\n      <React.Fragment>\n        <MenuItem withCheck selected={this.allSelected()} onClick={this.handleSelectAll}>\n          Marcar / Desmarcar todas\n        </MenuItem>\n        <div className={dividerStyles} />\n      </React.Fragment>\n    )\n  }\n\n  renderItem(item) {\n    const { multiselect } = this.props\n    const selected = multiselect\n      ? this.props.selected.includes(item.id)\n      : this.props.selected === item.id\n\n    return (\n      <MenuItem\n        key={item.id}\n        withCheck={multiselect}\n        selected={selected}\n        onClick={() => this.handleClick(item)}\n      >\n        {item.value}\n      </MenuItem>\n    )\n  }\n\n  renderItems() {\n    return this.props.items.map(item => this.renderItem(item))\n  }\n\n  render() {\n    const { name, disabled } = this.props\n\n    return (\n      <div ref={this.setWrapper}>\n        {name && (\n          <Text secondary className={nameStyles} size='small'>\n            {name}\n          </Text>\n        )}\n        <div className={dropdownContentStyles}>\n          <div className={buttonWrapperStyles}>\n            <input\n              className={fetchButtonStyles(disabled)}\n              type='button'\n              onBlur={this.handleOnBlur}\n              onClick={this.handleButtonClick}\n              value={this.buttonText()}\n            />\n            <span className={fetchArrowStyles(disabled)} onClick={this.handleButtonClick} />\n          </div>\n          <div\n            className={cx(menuWrapperStyles, {\n              [visibleStyles]: this.state.expanded,\n            })}\n          >\n            <Menu>\n              {this.renderSelectAll()}\n              {this.renderItems()}\n            </Menu>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nDropdown.propTypes = {\n  /** Singular and plural versions of the label to be shown on a multiselect\n   *  dropdown when at least one item is selected\n   */\n  buttonLabel: PropTypes.shape({\n    singular: PropTypes.string.isRequired,\n    plural: PropTypes.string.isRequired,\n  }),\n  /** An array of data describing the dropdown content. Each item must have\n   * a value and an id\n   */\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    }),\n  ).isRequired,\n  /** Indicates that the dropdown allows multiselection */\n  multiselect: PropTypes.bool,\n  /** The dropdown name, rendered on top of it */\n  name: PropTypes.string,\n  /** A callback to be called when the user clicks on an item.\n   * In a single select dropdown, it receives the id of the clicked item.\n   * If the dropdown allows multiselect, it receives an array with all the\n   * selected items ids.\n   */\n  onChange: PropTypes.func,\n  /** The text shown on the dropdown button when no item is selected */\n  placeholder: PropTypes.string,\n  /** The id of the currently selected item, or, in the case of a multiselect\n   * dropdown, an array containing the ids of the selected items.\n   */\n  selected: PropTypes.oneOfType([\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  ]),\n  /** A boolean and renders the dropdown unopenable */\n  disabled: PropTypes.bool,\n}\n\nDropdown.defaultProps = {\n  buttonLabel: {\n    singular: 'item',\n    plural: 'items',\n  },\n  placeholder: 'Selecione',\n}\n\nexport default Dropdown\n"]}]}