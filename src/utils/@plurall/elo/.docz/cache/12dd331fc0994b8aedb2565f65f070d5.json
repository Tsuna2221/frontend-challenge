{"remainingRequest":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"safari >= 7\"]}}],[\"@babel/preset-react\"],[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx","dependencies":[{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx","mtime":1542820173041},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1542822444129},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js","mtime":1541686617987}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n  margin-right: 10px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-left: 10px;\\n  font-family: \", \";\\n  font-size: \", \";\\n  ine-height: 1.43;\\n  color: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n      border: 1px solid #e8eced;\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      background-color: \", \";\\n      background-image: url(\", \");\\n      background-repeat: no-repeat;\\n      background-position: 50% 50%;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 16px;\\n  width: 16px;\\n  display: inline-block;\\n  border-radius: 2px;\\n  box-sizing: border-box;\\n  background-color: \", \";\\n\\n  &:hover {\\n    border-color: \", \";\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'react-emotion';\nimport theme from '../themes';\nimport checkMark from \"./checkMark.svg\";\nvar inputStyles = css(_templateObject());\nvar baseStyles = css(_templateObject2(), theme.colors.white, theme.colors.baseGreen);\n\nvar checkedStyles = function checkedStyles(_ref) {\n  var checked = _ref.checked;\n  return checked ? css(_templateObject3(), theme.colors.baseGreen, checkMark) : css(_templateObject4());\n};\n\nvar Input = styled('span')(_templateObject5(), baseStyles, checkedStyles);\nvar labelTextStyles = css(_templateObject6(), theme.typography.fontFamily.default, theme.typography.text.normal.fontsize, theme.colors.darkestGrey);\nvar labelStyles = css(_templateObject7());\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (event) {\n      if (_this.props.onChange) {\n        var _event$target = event.target,\n            checked = _event$target.checked,\n            name = _event$target.name,\n            value = _event$target.value;\n\n        _this.props.onChange({\n          checked: checked,\n          name: name,\n          value: value\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          checked = _this$props.checked,\n          label = _this$props.label,\n          name = _this$props.name,\n          value = _this$props.value;\n      return React.createElement(\"label\", {\n        className: labelStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: inputStyles,\n        onChange: this.handleChange,\n        checked: checked,\n        name: name,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), label && React.createElement(\"span\", {\n        className: labelTextStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, label));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.propTypes = {\n  /** Controls checked state of checkbox */\n  checked: PropTypes.bool,\n\n  /** Function called when checkbox changes */\n  onChange: PropTypes.func,\n\n  /** Identifies a group of checkboxes */\n  name: PropTypes.string,\n\n  /** Value of a checkbox. It must be unique inside a group */\n  value: PropTypes.string,\n\n  /** Label associated with the checkbox */\n  label: PropTypes.string\n};\nCheckbox.defaultProps = {\n  checked: false,\n  value: ''\n};\nvar _default = Checkbox;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(inputStyles, \"inputStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(baseStyles, \"baseStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(checkedStyles, \"checkedStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(Input, \"Input\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(labelTextStyles, \"labelTextStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(labelStyles, \"labelStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(Checkbox, \"Checkbox\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx\");\n  leaveModule(module);\n})();\n\n;\nCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Checkbox\",\n  \"props\": {\n    \"checked\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Controls checked state of checkbox\"\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Value of a checkbox. It must be unique inside a group\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Function called when checkbox changes\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Identifies a group of checkboxes\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Label associated with the checkbox\"\n    }\n  }\n};",{"version":3,"sources":["/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Checkbox/Checkbox.jsx"],"names":["React","PropTypes","styled","css","theme","inputStyles","baseStyles","colors","white","baseGreen","checkedStyles","checked","checkMark","Input","labelTextStyles","typography","fontFamily","default","text","normal","fontsize","darkestGrey","labelStyles","Checkbox","event","props","onChange","target","name","value","label","handleChange","Component","propTypes","bool","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'react-emotion'\n\nimport theme from '../themes'\nimport checkMark from './checkMark.svg'\n\nconst inputStyles = css`\n  display: none;\n`\n\nconst baseStyles = css`\n  height: 16px;\n  width: 16px;\n  display: inline-block;\n  border-radius: 2px;\n  box-sizing: border-box;\n  background-color: ${theme.colors.white};\n\n  &:hover {\n    border-color: ${theme.colors.baseGreen};\n  }\n`\n\nconst checkedStyles = ({ checked }) =>\n  checked\n    ? css`\n      background-color: ${theme.colors.baseGreen};\n      background-image: url(${checkMark});\n      background-repeat: no-repeat;\n      background-position: 50% 50%;\n    `\n    : css`\n      border: 1px solid #e8eced;\n    `\n\nconst Input = styled('span')`\n  ${baseStyles}\n  ${checkedStyles}\n`\n\nconst labelTextStyles = css`\n  margin-left: 10px;\n  font-family: ${theme.typography.fontFamily.default};\n  font-size: ${theme.typography.text.normal.fontsize};\n  ine-height: 1.43;\n  color: ${theme.colors.darkestGrey};\n`\n\nconst labelStyles = css`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-right: 10px;\n`\n\nclass Checkbox extends React.Component {\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const { checked, name, value } = event.target\n      this.props.onChange({ checked, name, value })\n    }\n  }\n\n  render() {\n    const { checked, label, name, value } = this.props\n    return (\n      <label className={labelStyles}>\n        <input\n          type=\"checkbox\"\n          className={inputStyles}\n          onChange={this.handleChange}\n          checked={checked}\n          name={name}\n          value={value}\n        />\n        <Input {...this.props} />\n        {label && <span className={labelTextStyles}>{label}</span>}\n      </label>\n    )\n  }\n}\n\nCheckbox.propTypes = {\n  /** Controls checked state of checkbox */\n  checked: PropTypes.bool,\n  /** Function called when checkbox changes */\n  onChange: PropTypes.func,\n  /** Identifies a group of checkboxes */\n  name: PropTypes.string,\n  /** Value of a checkbox. It must be unique inside a group */\n  value: PropTypes.string,\n  /** Label associated with the checkbox */\n  label: PropTypes.string,\n}\n\nCheckbox.defaultProps = {\n  checked: false,\n  value: '',\n}\n\nexport default Checkbox\n"]}]}