{"remainingRequest":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"safari >= 7\"]}}],[\"@babel/preset-react\"],[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx","dependencies":[{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx","mtime":1542827208991},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1542822444129},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js","mtime":1541686617987}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n  \", \"\\n  \", \"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    font-size: \", \";\\n  \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    color: \", \";\\n  \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    color: \", \";\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    font-style: italic;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    font-weight: \", \";\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: \", \";\\n  color: \", \";\\n  margin: 0;\\n  min-height: 20px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1.43;\\n  letter-spacing: normal;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport styled, { css } from 'react-emotion';\nimport PropTypes from 'prop-types';\nimport { HtmlElement } from '../utils';\nimport theme from '../themes';\nvar baseStyles = css(_templateObject(), theme.typography.fontFamily.default, theme.colors.primary);\n\nvar boldStyles = function boldStyles(_ref) {\n  var bold = _ref.bold;\n  return bold && css(_templateObject2(), theme.typography.fontWeight.bold);\n};\n\nvar italicStyles = function italicStyles(_ref2) {\n  var italic = _ref2.italic;\n  return italic && css(_templateObject3());\n};\n\nvar secondaryStyles = function secondaryStyles(_ref3) {\n  var secondary = _ref3.secondary;\n  return secondary && css(_templateObject4(), theme.colors.secondary);\n};\n\nvar disabledStyles = function disabledStyles(_ref4) {\n  var disabled = _ref4.disabled;\n  return disabled && css(_templateObject5(), theme.colors.lightGrey);\n};\n\nvar sizeStyles = function sizeStyles(_ref5) {\n  var size = _ref5.size;\n  return css(_templateObject6(), theme.typography.text[size].fontsize);\n};\n\nvar StyledText = styled(HtmlElement)(_templateObject7(), baseStyles, sizeStyles, boldStyles, italicStyles, secondaryStyles, disabledStyles);\n\nfunction Text(props) {\n  return React.createElement(StyledText, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nText.propTypes = {\n  /** Render the text with bold styles */\n  bold: PropTypes.bool,\n\n  /** The contents of the text */\n  children: PropTypes.node.isRequired,\n\n  /** Render the component with disabled styles */\n  disabled: PropTypes.bool,\n\n  /** The html element used to render the text */\n  element: PropTypes.oneOf(['span', 'p']),\n\n  /** Render the text with italic styles */\n  italic: PropTypes.bool,\n\n  /** Render the text with secondary styles */\n  secondary: PropTypes.bool,\n\n  /** Specifies the size of the text */\n  size: PropTypes.oneOf(['small', 'normal', 'big'])\n};\nText.defaultProps = {\n  element: 'p',\n  size: 'normal'\n};\nvar _default = Text;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(baseStyles, \"baseStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(boldStyles, \"boldStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(italicStyles, \"italicStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(secondaryStyles, \"secondaryStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(disabledStyles, \"disabledStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(sizeStyles, \"sizeStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(StyledText, \"StyledText\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(Text, \"Text\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx\");\n  leaveModule(module);\n})();\n\n;\nText.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Text\",\n  \"props\": {\n    \"element\": {\n      \"defaultValue\": {\n        \"value\": \"'p'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'span'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'p'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The html element used to render the text\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'normal'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'normal'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'big'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Specifies the size of the text\"\n    },\n    \"bold\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Render the text with bold styles\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": true,\n      \"description\": \"The contents of the text\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Render the component with disabled styles\"\n    },\n    \"italic\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Render the text with italic styles\"\n    },\n    \"secondary\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Render the text with secondary styles\"\n    }\n  }\n};",{"version":3,"sources":["/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Text/Text.jsx"],"names":["React","styled","css","PropTypes","HtmlElement","theme","baseStyles","typography","fontFamily","default","colors","primary","boldStyles","bold","fontWeight","italicStyles","italic","secondaryStyles","secondary","disabledStyles","disabled","lightGrey","sizeStyles","size","text","fontsize","StyledText","Text","props","propTypes","bool","children","node","isRequired","element","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,WAAlB;AAEA,IAAMC,UAAU,GAAGJ,GAAH,oBACCG,KAAK,CAACE,UAAN,CAAiBC,UAAjB,CAA4BC,OAD7B,EAELJ,KAAK,CAACK,MAAN,CAAaC,OAFR,CAAhB;;AAWA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACjBA,IAAI,IAAIX,GAAJ,qBACaG,KAAK,CAACE,UAAN,CAAiBO,UAAjB,CAA4BD,IADzC,CADa;AAAA,CAAnB;;AAIA,IAAME,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SACnBA,MAAM,IAAId,GAAJ,oBADa;AAAA,CAArB;;AAIA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SACtBA,SAAS,IAAIhB,GAAJ,qBACEG,KAAK,CAACK,MAAN,CAAaQ,SADf,CADa;AAAA,CAAxB;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,SACrBA,QAAQ,IAAIlB,GAAJ,qBACGG,KAAK,CAACK,MAAN,CAAaW,SADhB,CADa;AAAA,CAAvB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SACjBrB,GADiB,qBAEFG,KAAK,CAACE,UAAN,CAAiBiB,IAAjB,CAAsBD,IAAtB,EAA4BE,QAF1B;AAAA,CAAnB;;AAKA,IAAMC,UAAU,GAAGzB,MAAM,CAACG,WAAD,CAAT,qBACZE,UADY,EAEZgB,UAFY,EAGZV,UAHY,EAIZG,YAJY,EAKZE,eALY,EAMZE,cANY,CAAhB;;AASA,SAASQ,IAAT,CAAcC,KAAd,EAAqB;AACnB,SAAO,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAEDD,IAAI,CAACE,SAAL,GAAiB;AACf;AACAhB,EAAAA,IAAI,EAAEV,SAAS,CAAC2B,IAFD;;AAGf;AACAC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,IAAV,CAAeC,UAJV;;AAKf;AACAb,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,IANL;;AAOf;AACAI,EAAAA,OAAO,EAAE/B,SAAS,CAACgC,KAAV,CAAgB,CAAC,MAAD,EAAS,GAAT,CAAhB,CARM;;AASf;AACAnB,EAAAA,MAAM,EAAEb,SAAS,CAAC2B,IAVH;;AAWf;AACAZ,EAAAA,SAAS,EAAEf,SAAS,CAAC2B,IAZN;;AAaf;AACAP,EAAAA,IAAI,EAAEpB,SAAS,CAACgC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAhB;AAdS,CAAjB;AAiBAR,IAAI,CAACS,YAAL,GAAoB;AAClBF,EAAAA,OAAO,EAAE,GADS;AAElBX,EAAAA,IAAI,EAAE;AAFY,CAApB;eAKeI,I;AAAf;;;;;;;;;;;;0BAnEMrB,U;0BAWAM,U;0BAIAG,Y;0BAIAE,e;0BAIAE,c;0BAIAG,U;0BAKAI,U;0BASGC,I","sourcesContent":["import React from 'react'\nimport styled, { css } from 'react-emotion'\nimport PropTypes from 'prop-types'\n\nimport { HtmlElement } from '../utils'\nimport theme from '../themes'\n\nconst baseStyles = css`\n  font-family: ${theme.typography.fontFamily.default};\n  color: ${theme.colors.primary};\n  margin: 0;\n  min-height: 20px;\n  font-weight: normal;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: 1.43;\n  letter-spacing: normal;\n`\nconst boldStyles = ({ bold }) =>\n  bold && css`\n    font-weight: ${theme.typography.fontWeight.bold};\n  `\nconst italicStyles = ({ italic }) =>\n  italic && css`\n    font-style: italic;\n  `\nconst secondaryStyles = ({ secondary }) =>\n  secondary && css`\n    color: ${theme.colors.secondary};\n  `\nconst disabledStyles = ({ disabled }) =>\n  disabled && css`\n    color: ${theme.colors.lightGrey};\n  `\nconst sizeStyles = ({ size }) =>\n  css`\n    font-size: ${theme.typography.text[size].fontsize};\n  `\n\nconst StyledText = styled(HtmlElement)`\n  ${baseStyles}\n  ${sizeStyles}\n  ${boldStyles}\n  ${italicStyles}\n  ${secondaryStyles}\n  ${disabledStyles}\n`\n\nfunction Text(props) {\n  return <StyledText {...props} />\n}\n\nText.propTypes = {\n  /** Render the text with bold styles */\n  bold: PropTypes.bool,\n  /** The contents of the text */\n  children: PropTypes.node.isRequired,\n  /** Render the component with disabled styles */\n  disabled: PropTypes.bool,\n  /** The html element used to render the text */\n  element: PropTypes.oneOf(['span', 'p']),\n  /** Render the text with italic styles */\n  italic: PropTypes.bool,\n  /** Render the text with secondary styles */\n  secondary: PropTypes.bool,\n  /** Specifies the size of the text */\n  size: PropTypes.oneOf(['small', 'normal', 'big']),\n}\n\nText.defaultProps = {\n  element: 'p',\n  size: 'normal',\n}\n\nexport default Text\n"]}]}