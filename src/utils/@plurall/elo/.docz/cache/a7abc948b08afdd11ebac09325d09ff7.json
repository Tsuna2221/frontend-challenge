{"remainingRequest":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"safari >= 7\"]}}],[\"@babel/preset-react\"],[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx","dependencies":[{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx","mtime":1554739244044},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1542822444129},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js","mtime":1541686617987}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    height: \", \";\\n    width: \", \";\\n    display: flex;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactSVG from 'react-svg';\nimport { css } from 'react-emotion';\nimport theme from '../themes';\nimport arrow from \"./arrow.svg\";\nimport attention from \"./attention.svg\";\nimport close from \"./close.svg\";\nimport download from \"./download.svg\";\nimport error from \"./error.svg\";\nimport externalLink from \"./externalLink.svg\";\nimport filter from \"./filter.svg\";\nimport help from \"./help.svg\";\nimport importantInformation from \"./importantInformation.svg\";\nimport order from \"./order.svg\";\nimport orderAscending from \"./orderAscending.svg\";\nimport orderDescending from \"./orderDescending.svg\";\nimport subtleInformation from \"./subtleInformation.svg\";\nimport success from \"./success.svg\";\nimport statsPositive from \"./statsPositive.svg\";\nimport statsNegative from \"./statsNegative.svg\";\nvar icons = {\n  arrow: arrow,\n  attention: attention,\n  close: close,\n  download: download,\n  error: error,\n  externalLink: externalLink,\n  filter: filter,\n  help: help,\n  importantInformation: importantInformation,\n  order: order,\n  orderAscending: orderAscending,\n  orderDescending: orderDescending,\n  subtleInformation: subtleInformation,\n  success: success,\n  statsPositive: statsPositive,\n  statsNegative: statsNegative\n};\nvar iconsSizing = {\n  arrow: 12,\n  filter: 12,\n  statsPositive: 12,\n  statsNegative: 12,\n  attention: 16,\n  close: 16,\n  download: 16,\n  error: 16,\n  externalLink: 16,\n  help: 16,\n  importantInformation: 16,\n  order: 12,\n  orderAscending: 12,\n  orderDescending: 12,\n  subtleInformation: 16,\n  success: 16\n};\n\nvar sizeStyles = function sizeStyles(_ref) {\n  var size = _ref.size,\n      type = _ref.type;\n  return css(_templateObject(), theme.iconsSizes.base[iconsSizing[type]][size].size, theme.iconsSizes.base[iconsSizing[type]][size].size);\n};\n\nvar Icon = function Icon(props) {\n  return React.createElement(\"div\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(ReactSVG, {\n    svgClassName: sizeStyles(props),\n    src: icons[props.type],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nIcon.propTypes = {\n  /** The icon chosen to be shown */\n  type: PropTypes.oneOf(['arrow', 'attention', 'close', 'download', 'error', 'externalLink', 'filter', 'help', 'importantInformation', 'order', 'orderAscending', 'orderDescending', 'subtleInformation', 'success', 'statsPositive', 'statsNegative']).isRequired,\n\n  /** Icon size. */\n  size: PropTypes.oneOf(['small', 'normal', 'big'])\n};\nIcon.defaultProps = {\n  size: 'normal'\n};\nvar _default = Icon;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(icons, \"icons\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\");\n  reactHotLoader.register(iconsSizing, \"iconsSizing\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\");\n  reactHotLoader.register(sizeStyles, \"sizeStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\");\n  reactHotLoader.register(Icon, \"Icon\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx\");\n  leaveModule(module);\n})();\n\n;\nIcon.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Icon\",\n  \"props\": {\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'normal'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'normal'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'big'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Icon size.\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'arrow'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'attention'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'close'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'download'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'error'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'externalLink'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'filter'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'help'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'importantInformation'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'order'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'orderAscending'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'orderDescending'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'subtleInformation'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'statsPositive'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'statsNegative'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"The icon chosen to be shown\"\n    }\n  }\n};",{"version":3,"sources":["/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/Icon/Icon.jsx"],"names":["React","PropTypes","ReactSVG","css","theme","icons","arrow","attention","close","download","error","externalLink","filter","help","importantInformation","order","orderAscending","orderDescending","subtleInformation","success","statsPositive","statsNegative","iconsSizing","sizeStyles","size","type","iconsSizes","base","Icon","props","propTypes","oneOf","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,WAAlB;;;;;;;;;;;;;;;;;AAmBA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAALA,KADY;AAEZC,EAAAA,SAAS,EAATA,SAFY;AAGZC,EAAAA,KAAK,EAALA,KAHY;AAIZC,EAAAA,QAAQ,EAARA,QAJY;AAKZC,EAAAA,KAAK,EAALA,KALY;AAMZC,EAAAA,YAAY,EAAZA,YANY;AAOZC,EAAAA,MAAM,EAANA,MAPY;AAQZC,EAAAA,IAAI,EAAJA,IARY;AASZC,EAAAA,oBAAoB,EAApBA,oBATY;AAUZC,EAAAA,KAAK,EAALA,KAVY;AAWZC,EAAAA,cAAc,EAAdA,cAXY;AAYZC,EAAAA,eAAe,EAAfA,eAZY;AAaZC,EAAAA,iBAAiB,EAAjBA,iBAbY;AAcZC,EAAAA,OAAO,EAAPA,OAdY;AAeZC,EAAAA,aAAa,EAAbA,aAfY;AAgBZC,EAAAA,aAAa,EAAbA;AAhBY,CAAd;AAmBA,IAAMC,WAAW,GAAG;AAClBhB,EAAAA,KAAK,EAAE,EADW;AAElBM,EAAAA,MAAM,EAAE,EAFU;AAGlBQ,EAAAA,aAAa,EAAE,EAHG;AAIlBC,EAAAA,aAAa,EAAE,EAJG;AAKlBd,EAAAA,SAAS,EAAE,EALO;AAMlBC,EAAAA,KAAK,EAAE,EANW;AAOlBC,EAAAA,QAAQ,EAAE,EAPQ;AAQlBC,EAAAA,KAAK,EAAE,EARW;AASlBC,EAAAA,YAAY,EAAE,EATI;AAUlBE,EAAAA,IAAI,EAAE,EAVY;AAWlBC,EAAAA,oBAAoB,EAAE,EAXJ;AAYlBC,EAAAA,KAAK,EAAE,EAZW;AAalBC,EAAAA,cAAc,EAAE,EAbE;AAclBC,EAAAA,eAAe,EAAE,EAdC;AAelBC,EAAAA,iBAAiB,EAAE,EAfD;AAgBlBC,EAAAA,OAAO,EAAE;AAhBS,CAApB;;AAoBA,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACrC,SAAOtB,GAAP,oBACYC,KAAK,CAACsB,UAAN,CAAiBC,IAAjB,CAAsBL,WAAW,CAACG,IAAD,CAAjC,EAAyCD,IAAzC,EAA+CA,IAD3D,EAEWpB,KAAK,CAACsB,UAAN,CAAiBC,IAAjB,CAAsBL,WAAW,CAACG,IAAD,CAAjC,EAAyCD,IAAzC,EAA+CA,IAF1D;AAKD,CAND;;AAQA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,SACE,6CAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAEN,UAAU,CAACM,KAAD,CAAlC;AAA2C,IAAA,GAAG,EAAExB,KAAK,CAACwB,KAAK,CAACJ,IAAP,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQAG,IAAI,CAACE,SAAL,GAAiB;AACf;AACAL,EAAAA,IAAI,EAAExB,SAAS,CAAC8B,KAAV,CACJ,CAAC,OAAD,EACE,WADF,EAEE,OAFF,EAGE,UAHF,EAIE,OAJF,EAKE,cALF,EAME,QANF,EAOE,MAPF,EAQE,sBARF,EASE,OATF,EAUE,gBAVF,EAWE,iBAXF,EAYE,mBAZF,EAaE,SAbF,EAcE,eAdF,EAeE,eAfF,CADI,EAiBJC,UAnBa;;AAoBf;AACAR,EAAAA,IAAI,EAAEvB,SAAS,CAAC8B,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAhB;AArBS,CAAjB;AAwBAH,IAAI,CAACK,YAAL,GAAoB;AAClBT,EAAAA,IAAI,EAAE;AADY,CAApB;eAIeI,I;AAAf;;;;;;;;;;;;0BAnFMvB,K;0BAmBAiB,W;0BAoBAC,U;0BAQAK,I","sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactSVG from 'react-svg'\n\nimport { css } from 'react-emotion'\nimport theme from '../themes'\n\nimport arrow from './arrow.svg'\nimport attention from './attention.svg'\nimport close from './close.svg'\nimport download from './download.svg'\nimport error from './error.svg'\nimport externalLink from './externalLink.svg'\nimport filter from './filter.svg'\nimport help from './help.svg'\nimport importantInformation from './importantInformation.svg'\nimport order from './order.svg'\nimport orderAscending from './orderAscending.svg'\nimport orderDescending from './orderDescending.svg'\nimport subtleInformation from './subtleInformation.svg'\nimport success from './success.svg'\nimport statsPositive from './statsPositive.svg'\nimport statsNegative from './statsNegative.svg'\n\nconst icons = {\n  arrow,\n  attention,\n  close,\n  download,\n  error,\n  externalLink,\n  filter,\n  help,\n  importantInformation,\n  order,\n  orderAscending,\n  orderDescending,\n  subtleInformation,\n  success,\n  statsPositive,\n  statsNegative,\n}\n\nconst iconsSizing = {\n  arrow: 12,\n  filter: 12,\n  statsPositive: 12,\n  statsNegative: 12,\n  attention: 16,\n  close: 16,\n  download: 16,\n  error: 16,\n  externalLink: 16,\n  help: 16,\n  importantInformation: 16,\n  order: 12,\n  orderAscending: 12,\n  orderDescending: 12,\n  subtleInformation: 16,\n  success: 16,\n}\n\n\nconst sizeStyles = ({ size, type }) => {\n  return css`\n    height: ${theme.iconsSizes.base[iconsSizing[type]][size].size};\n    width: ${theme.iconsSizes.base[iconsSizing[type]][size].size};\n    display: flex;\n  `\n}\n\nconst Icon = (props) => {\n  return (\n    <div {...props}>\n      <ReactSVG svgClassName={sizeStyles(props)} src={icons[props.type]}/>\n    </div>\n  )\n}\n\nIcon.propTypes = {\n  /** The icon chosen to be shown */\n  type: PropTypes.oneOf(\n    ['arrow',\n      'attention',\n      'close',\n      'download',\n      'error',\n      'externalLink',\n      'filter',\n      'help',\n      'importantInformation',\n      'order',\n      'orderAscending',\n      'orderDescending',\n      'subtleInformation',\n      'success',\n      'statsPositive',\n      'statsNegative']\n  ).isRequired,\n  /** Icon size. */\n  size: PropTypes.oneOf(['small', 'normal', 'big']),\n}\n\nIcon.defaultProps = {\n  size: 'normal'\n}\n\nexport default Icon;\n"]}]}