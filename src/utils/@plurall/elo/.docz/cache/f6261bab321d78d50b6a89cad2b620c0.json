{"remainingRequest":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"last 2 versions\",\"safari >= 7\"]}}],[\"@babel/preset-react\"],[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",[\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx","dependencies":[{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx","mtime":1554739244045},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1542822444129},{"path":"/Users/keppelen/Projects/somos/plurall/plurall-ui/node_modules/babel-loader/lib/index.js","mtime":1541686617987}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  cursor: pointer;\\n  white-space: initial;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  max-width: 350px;\\n  color: \", \";\\n  background-color: \", \";\\n  font-size: 12px;\\n  font-family: \", \";\\n  font-weight: 300;\\n  padding: 8px 10px;\\n  margin: 0;\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  line-height: 1.5;\\n  letter-spacing: 0.3px;\\n  top: 8px;\\n  transition: opacity 200ms ease 0s, transform 200ms ease 0s;\\n\\n  &:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    top: -13px;\\n    left: 7%;\\n    margin-left: -7px;\\n    border-width: 7px;\\n    border-style: solid;\\n    border-color: transparent transparent \", \" transparent;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  font-size: \", \";\\n  font-family: \", \";\\n  height: 40px;\\n  width: 100%;\\n  padding: 8px 20px 8px 8px;\\n  background-color: \", \";\\n  border: 1px solid \", \";\\n  border-radius: 8px;\\n  box-sizing: border-box;\\n\\n  &:focus, &:hover {\\n    border-color: \", \";\\n    box-shadow: inset 0 0 0 1px #f3d661;\\n  }\\n\\n  &:focus {\\n    background-color: \", \";\\n    outline: none;\\n  }\\n\\n  &::placeholder {\\n    color: \", \";\\n    font-size: \", \";\\n    font-family: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 4px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'react-emotion';\nimport Text from '../Text/Text';\nimport InputMask from 'react-input-mask';\nimport theme from '../themes';\nimport { dateRegExp } from './helpers';\nvar textBoxWrapperStyles = css(_templateObject());\nvar labelStyles = css(_templateObject2());\nvar inputWrapperStyles = css(_templateObject3());\nvar inputStyles = css(_templateObject4(), theme.colors.baseGrey, theme.typography.text.normal.fontsize, theme.typography.fontFamily.default, theme.colors.whiteSnow, theme.colors.lightestGrey, theme.colors.baseYellow, theme.colors.lightestYellow, theme.colors.baseGrey, theme.typography.text.normal.fontsize, theme.typography.fontFamily.default);\nvar mismatchMessageTextStyles = css(_templateObject5(), theme.colors.white, theme.colors.darkestGrey, theme.typography.fontFamily.default, theme.colors.darkestGrey);\nvar mismatchMessageContainerStyles = css(_templateObject6());\nvar masks = {\n  date: '**/**'\n};\nvar maskChars = {\n  date: null\n};\nvar regExps = {\n  date: dateRegExp()\n};\n\nvar TextBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextBox, _React$Component);\n\n  function TextBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TextBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TextBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      value: '',\n      hideMismatchMessage: true\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isValid\", function (value) {\n      var match = new RegExp(regExps[_this.props.mask]);\n      return match.test(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateState\", function (value) {\n      if (_this.isValid(value)) {\n        _this.setState({\n          value: value,\n          hideMismatchMessage: true\n        });\n      } else {\n        _this.setState({\n          hideMismatchMessage: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClickOutside\", function (event) {\n      _this.setState({\n        hideMismatchMessage: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleChange\", function (event) {\n      _this.updateState(event.target.value);\n\n      var value = _this.isValid(event.target.value) ? event.target.value : _this.state.value;\n      _this.props.onChange && _this.props.onChange(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(TextBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('touchstart', this.handleClickOutside);\n      document.addEventListener('mousedown', this.handleClickOutside);\n      this.updateState(this.props.value);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('touchstart', this.handleClickOutside);\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      return React.createElement(\"div\", {\n        className: textBoxWrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, label && React.createElement(Text, {\n        size: \"small\",\n        className: labelStyles,\n        secondary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        className: inputWrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(InputMask, {\n        mask: masks[this.props.mask],\n        maskChar: maskChars[this.props.mask],\n        className: inputStyles,\n        placeholder: this.props.placeholder,\n        onChange: this.handleChange,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), this.state.hideMismatchMessage || React.createElement(\"div\", {\n        className: mismatchMessageContainerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"small\",\n        className: mismatchMessageTextStyles,\n        secondary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.props.mismatchMessage)));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TextBox;\n}(React.Component);\n\nTextBox.propTypes = {\n  /** An optional text shown above the TextBox. It's useful to describe\n   * its intent and functionality to the user\n   */\n  label: PropTypes.string,\n\n  /** A callback to be called when the user types on input field.\n   * It receives the currently typed text as an argument\n   */\n  onChange: PropTypes.func,\n\n  /** The placeholder text shown on the input field when it's empty */\n  placeholder: PropTypes.string,\n\n  /** Choose the mask the component will use to filter the typed text  */\n  mask: PropTypes.string,\n\n  /** A message to be shown below the input if there is a pattern mismatch */\n  mismatchMessage: PropTypes.string,\n\n  /** A value for the field to be rendered with */\n  value: PropTypes.string\n};\nTextBox.defaultProps = {\n  mismatchMessage: 'Formato de texto incorreto.',\n  value: ''\n};\nvar _default = TextBox;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(textBoxWrapperStyles, \"textBoxWrapperStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(labelStyles, \"labelStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(inputWrapperStyles, \"inputWrapperStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(inputStyles, \"inputStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(mismatchMessageTextStyles, \"mismatchMessageTextStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(mismatchMessageContainerStyles, \"mismatchMessageContainerStyles\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(masks, \"masks\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(maskChars, \"maskChars\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(regExps, \"regExps\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(TextBox, \"TextBox\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx\");\n  leaveModule(module);\n})();\n\n;\nTextBox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"isValid\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"updateState\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"value\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleClickOutside\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"TextBox\",\n  \"props\": {\n    \"mismatchMessage\": {\n      \"defaultValue\": {\n        \"value\": \"'Formato de texto incorreto.'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"A message to be shown below the input if there is a pattern mismatch\"\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"A value for the field to be rendered with\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"An optional text shown above the TextBox. It's useful to describe\\nits intent and functionality to the user\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"A callback to be called when the user types on input field.\\nIt receives the currently typed text as an argument\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"The placeholder text shown on the input field when it's empty\"\n    },\n    \"mask\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Choose the mask the component will use to filter the typed text\"\n    }\n  }\n};",{"version":3,"sources":["/Users/keppelen/Projects/somos/plurall/plurall-ui/src/components/TextBox/TextBox.jsx"],"names":["React","PropTypes","css","Text","InputMask","theme","dateRegExp","textBoxWrapperStyles","labelStyles","inputWrapperStyles","inputStyles","colors","baseGrey","typography","text","normal","fontsize","fontFamily","default","whiteSnow","lightestGrey","baseYellow","lightestYellow","mismatchMessageTextStyles","white","darkestGrey","mismatchMessageContainerStyles","masks","date","maskChars","regExps","TextBox","value","hideMismatchMessage","match","RegExp","props","mask","test","isValid","setState","event","updateState","target","state","onChange","document","addEventListener","handleClickOutside","removeEventListener","label","placeholder","handleChange","mismatchMessage","Component","propTypes","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css } from 'react-emotion'\n\nimport Text from '../Text/Text'\nimport InputMask from 'react-input-mask'\nimport theme from '../themes'\nimport { dateRegExp } from './helpers'\n\nconst textBoxWrapperStyles = css`\n  display: flex;\n  flex-direction: column;\n`\n\nconst labelStyles = css`\n  margin-bottom: 4px;\n`\n\nconst inputWrapperStyles = css`\n  position: relative;\n`\n\nconst inputStyles = css`\n  color: ${theme.colors.baseGrey};\n  font-size: ${theme.typography.text.normal.fontsize};\n  font-family: ${theme.typography.fontFamily.default};\n  height: 40px;\n  width: 100%;\n  padding: 8px 20px 8px 8px;\n  background-color: ${theme.colors.whiteSnow};\n  border: 1px solid ${theme.colors.lightestGrey};\n  border-radius: 8px;\n  box-sizing: border-box;\n\n  &:focus, &:hover {\n    border-color: ${theme.colors.baseYellow};\n    box-shadow: inset 0 0 0 1px #f3d661;\n  }\n\n  &:focus {\n    background-color: ${theme.colors.lightestYellow};\n    outline: none;\n  }\n\n  &::placeholder {\n    color: ${theme.colors.baseGrey};\n    font-size: ${theme.typography.text.normal.fontsize};\n    font-family: ${theme.typography.fontFamily.default};\n  }\n`\n\nconst mismatchMessageTextStyles = css`\n  position: absolute;\n  max-width: 350px;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.darkestGrey};\n  font-size: 12px;\n  font-family: ${theme.typography.fontFamily.default};\n  font-weight: 300;\n  padding: 8px 10px;\n  margin: 0;\n  box-sizing: border-box;\n  border-radius: 4px;\n  line-height: 1.5;\n  letter-spacing: 0.3px;\n  top: 8px;\n  transition: opacity 200ms ease 0s, transform 200ms ease 0s;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    top: -13px;\n    left: 7%;\n    margin-left: -7px;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent ${theme.colors.darkestGrey} transparent;\n  }\n`\n\nconst mismatchMessageContainerStyles = css`\n  position: relative;\n  cursor: pointer;\n  white-space: initial;\n`\n\nconst masks = {\n  date: '**/**'\n}\n\nconst maskChars = {\n  date: null\n}\n\nconst regExps = {\n  date: dateRegExp()\n}\n\n\nclass TextBox extends React.Component {\n  state = { value: '', hideMismatchMessage: true }\n\n  componentDidMount() {\n    document.addEventListener('touchstart', this.handleClickOutside)\n    document.addEventListener('mousedown', this.handleClickOutside)\n\n    this.updateState(this.props.value)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.handleClickOutside)\n    document.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  isValid = (value) => {\n    const match = new RegExp(regExps[this.props.mask])\n\n    return match.test(value)\n  }\n\n  updateState = (value) => {\n    if (this.isValid(value)) {\n      this.setState({ value, hideMismatchMessage: true })\n    } else {\n      this.setState({ hideMismatchMessage: false })\n    }\n  }\n\n  handleClickOutside = (event) => {\n    this.setState({ hideMismatchMessage: true })\n  }\n\n  handleChange = (event) => {\n    this.updateState(event.target.value)\n    const value = this.isValid(event.target.value) ? event.target.value : this.state.value\n\n    this.props.onChange && this.props.onChange(value)\n  }\n\n  render() {\n    const { label } = this.props\n\n    return (\n      <div className={textBoxWrapperStyles}>\n        {label &&\n          <Text size=\"small\" className={labelStyles} secondary>{label}</Text>\n        }\n        <div className={inputWrapperStyles}>\n          <InputMask\n            mask={masks[this.props.mask]}\n            maskChar={maskChars[this.props.mask]}\n            className={inputStyles}\n            placeholder={this.props.placeholder}\n            onChange={this.handleChange}\n            value={this.state.value}\n          />\n        </div>\n        {this.state.hideMismatchMessage || <div className={mismatchMessageContainerStyles}>\n          <Text size=\"small\" className={mismatchMessageTextStyles} secondary>\n            {this.props.mismatchMessage}\n          </Text>\n        </div>}\n      </div>\n    )\n  }\n}\n\nTextBox.propTypes = {\n  /** An optional text shown above the TextBox. It's useful to describe\n   * its intent and functionality to the user\n   */\n  label: PropTypes.string,\n  /** A callback to be called when the user types on input field.\n   * It receives the currently typed text as an argument\n   */\n  onChange: PropTypes.func,\n  /** The placeholder text shown on the input field when it's empty */\n  placeholder: PropTypes.string,\n  /** Choose the mask the component will use to filter the typed text  */\n  mask: PropTypes.string,\n  /** A message to be shown below the input if there is a pattern mismatch */\n  mismatchMessage: PropTypes.string,\n  /** A value for the field to be rendered with */\n  value: PropTypes.string,\n}\n\nTextBox.defaultProps = {\n  mismatchMessage: 'Formato de texto incorreto.',\n  value: '',\n}\n\nexport default TextBox\n"]}]}